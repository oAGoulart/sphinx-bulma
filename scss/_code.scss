/*
 * Default code styles
 */
 @charset "utf-8";

code, pre {
  @include palette() {
    background-color: palette-get('bg-color');
  }
  font-family: $family-code;
}

pre:not(.ignore) {
  @include palette() {
    color: palette-get('red');
  }
  padding: 1.5rem;

  span {
    line-height: 20px;

    &.linenos {
      @include palette() {
        color: palette-get('code-color');
      }
      font-size: 12px;
      padding-right: 20px;
    }
  }
}

pre {
  padding: 2rem;
}

div[class^="highlight-"] {
  overflow-x: auto;
  margin-bottom: 1rem;
}

.glossary dt:not(body),
.label:not(body),
dt:not(body),
span.guilabel:not(body),
.tag:not(body) {
  white-space: pre;
  font-family: $family-code;
  font-weight: 600;
  font-size: 14px;
  margin: 0.1rem;
  
  .property span.pre {
    @include palette() {
      color: palette-get('pink');
    }
  }

  .sig {
    &-prename {
      @include palette() {
        color: palette-get('blue');
      }
    }

    &-name {
      @include palette() {
        color: palette-get('red');
      }
    }

    &-param {
      @include palette() {
        color: palette-get('code-color');
      }
    }
  }
}

.highlight {
  margin: 1rem 0;

  pre {
    padding: 1rem;
  }

  .hll {
    @include palette() {
      background-color: palette-get('hll-color');
    }
  }

  .err {
    @include palette() {
      color: palette-get('code-color');
    }
  }

  .w {
    color: transparent;
  }

  .x, .n {
    @include palette() {
      color: palette-get('code-color');
    }
  }

  .na {
    @include palette() {
      color: palette-get('blue');
    }
  }

  .nb {
    @include palette() {
      color: palette-get('cyan');
    }
  }

  .nc {
    @include palette() {
      color: palette-get('blue');
    }
  }

  .no, .nd {
    @include palette() {
      color: palette-get('pink');
    }
  }

  .ni, .ne {
    @include palette() {
      color: palette-get('code-color');
    }
  }

  .nf {
    @include palette() {
      color: palette-get('pink');
    }
  }

  .nl {
    @include palette() {
      color: palette-get('link-color');
    }
  }

  .nn {
    @include palette() {
      color: palette-get('orange');
    }
  }

  .nx {
    @include palette() {
      color: palette-get('cyan');
    }
  }

  .py {
    @include palette() {
      color: palette-get('code-color');
    }
  }

  .nt {
    @include palette() {
      color: palette-get('gold');
    }
  }

  .nv {
    @include palette() {
      color: palette-get('orange');
    }
  }

  .vc, .vg, .vi, .bp, .o {
    @include palette() {
      color: palette-get('code-color');
    }
  }

  .ow {
    @include palette() {
      color: palette-get('pink');
    }
  }

  .c, .cm {
    @include palette() {
      color: palette-get('code-color');
    }
    font-style: italic;
  }

  .cp {
    @include palette() {
      color: palette-get('green');
    }
    font-style: italic;
  }

  .c1, .cs {
    @include palette() {
      color: palette-get('code-color');
    }
    font-style: italic;
  }

  .k, .kc, .kd {
    @include palette() {
      color: palette-get('pink');
    }
  }

  .kc {
    @include palette() {
      color: palette-get('orange');
    }
  }

  .kn {
    @include palette() {
      color: palette-get('blue');
    }
  }

  .kp, .kr, .kt {
    @include palette() {
      color: palette-get('pink');
    }
  }

  .l {
    @include palette() {
      color: palette-get('greenish');
    }
  }

  .ld, .m, .mf, .mh, .mi, .mo, .il {
    @include palette() {
      color: palette-get('orange');
    }
  }

  .s, .sb, .sc, .sd, .s2, .se, .sh, .si, .sx, .sr, .s1 {
    @include palette() {
      color: palette-get('greenish');
    }
  }

  .ss {
    @include palette() {
      color: palette-get('cyan');
    }
  }

  .g, .gd, .ge, .gr, .gh, .gi, .go, .gp, .gs, .gu, .gt {
    @include palette() {
      color: palette-get('link-color');
    }
  }
}
